/* eslint-disable */
export default {
    postlist: [ 
        {
            title: "첫글",
            date: 1530148416937,
            text: "--대망의 첫 글이자 테스트를 위한 글이다.  " +
            "--블로그를 만들면서 느낀점을 한가지 말하자면, 데이터 베이스나 서버가 없는 페이지를 만드는 게 이렇게 고민이 필요한 일이라고는 생각하지 못했다는 것이다. 오히려 백엔드를 구축할 필요가 없으니 간단하겠다고만 생각했지 작성한 포스트를 어떻게 관리해야 할 지에 대한 생각이 부족했다. 지금까지 소홀했던 Vue공부나 하면서 천천히 만들어야지 개꿀. 이렇게 생각했는데 생각보다 귀찮은 일이었다.  " +
            "--서버는 괜찮다. 어차피 Vue를 통해 라우팅도 하고 간단한 데이터를 조절할 수 있으니까, 하지만 데이터베이스는 조금 고민을 하지 않을 수 없었다. 물론 그냥 글을 HTML로 전부 작성할 수는 있다. 하지만 그렇게 하면 라우팅이 복잡해지고 나중에 글을 수정하거나 할 때 많은 부분을 수정해야 한다. 따라서 데이터베이스처럼 하나의 공간에 데이터를 밀어넣고 수정하고 싶을 때 수정할 수 있는 방법이 필요했다.  " +
            "--사실을 말하자면 그다지 어려운 방법을 사용하지는 않았다. vuex를 이용해서 state에 글과 제목을 저장하고 데이터 베이스처럼 사용했다. 이 역시 그다지 스마트한 방법은 아니라고 생각하지만 더 이상 복잡하게 생각하기 보다는 일단 시작해 보자는 생각으로 선택했다. 아마 이 방법이 불편해지면 나서서 바꾸게 될지도 모를 일이겠다.  " +
            "--코드하이라이트도 적용을 해 보았다. 어쨌든 개발자의 블로그인데 코드를 써야 할 일이 당연히 있겠지 싶다. 해당 코드는 코드하이라이트를 Vue에 적용할 때 사용한 코드의 일부이다.  " +
            "<pre class='language-js'><code class='language-js'>" +
            "import Vue from 'vue'\n" +
            "import VuePrism from 'vue-prism'\n" +
            "Vue.use(VuePrism)\n" +
            "import 'prismjs/themes/prism.css'\n" +
            "</code></pre>" +
            "--썩 유쾌하지 않게도, 위의 코드박스의 하이라이트기능이 처음 랜더링 시 적용되지 않고있다. 아마도 처음 vuex의 state로부터 값을 받고 적용시킬 때 Prismjs의 스타일이 적용되지 않은 상태로 보여지는 것 같다. mounted를 이용하여 적용시키는 것이 문제일지도 모르겠다고는 생각중이나 딱히 해결방법이 떠오르지 않아서 이것저것 시도해 보는 중이다.  "
        }, 
        {
            title: "두번째 테스트",
            date: 1530238051467,
            text: "--두번째 테스트 글이자 결과보고 같은 것이다.  " +
            "--확실히 Vue를 너무 오래 사용하지 않은 것 같다. 회사를 다니면서 계속 React만 사용하다 보니 Vue에 대한 지식이 많이 빠져나갔다. 만드는 도중에 route를 할 때 URL은 param값에 따라 분명히 변하는데 내용이 변하지를 않는 버그가 있어서 고치는데 시간을 허비했다. 사실 생각해보니 간단한 문제였다.  " +
            "--Vue는 퍼포먼스를 위해서 컴포넌트를 렌더링하고 같은 컴포넌트를 또 렌더링 하면 처음부터 다시 렌더링 하지 않는다. 결국 created함수에서 data필드를 변화시키도록 코드를 짰다고 해도, param값만 다르게 같은 컴포넌트로 라우트 할 경우 data필드는 변화하지 않는다. 왜냐하면 새로 created되지 않기 떄문이다.  " +
            "<pre class='language-js'><code class='language-js'>" +
            "created: function() {\n" +
            "--this.title = this.$route.params.title\n" +
            "}\n" +
            "</code></pre>" +
            "--만약 이런 코드가 있다면 실제로 'title'은 변하지 않을 것이다.  " +
            "--이 바보같은 행동을 변명하자면 이 사실을 원래는 알고 있었는데 세월이 흘러서 까먹어 버린 것이다. 그래서 멍청하게 그걸 알아차리지 못하고, 엄한 router에 대해서만 검색하고 있었다. 이런 점을 보면 컴퓨터기술은 언어와 비슷하다. 사용하지 않으면 당연한 것 처럼 까먹는다. 심지어 비슷한 기술을 사용하고 있다고 해도 말이다. 앞으로도 계속해서 리마인드 시킬 필요가 있을 것 같다."
        }
    ]
}